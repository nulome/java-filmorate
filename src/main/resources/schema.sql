DROP TABLE IF EXISTS users, films, friends, likes, genre, mpa, film_genres, film_mpa;

CREATE TABLE IF NOT EXISTS users (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	login varchar(55) UNIQUE NOT NULL,
	name varchar(255),
	email varchar(55) UNIQUE NOT NULL,
	birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255) NOT NULL,
  description varchar(200),
  releaseDate date NOT NULL,
  duration integer NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
  user_id integer NOT NULL,
  friend_id integer NOT NULL,
  CONSTRAINT friends_user_friend FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT friends_friend_user FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS likes (
  film_id integer NOT NULL,
  user_id integer NOT NULL,
  CONSTRAINT likes_film_id FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  CONSTRAINT likes_user_id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genre (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(20) UNIQUE
);

CREATE TABLE IF NOT EXISTS mpa (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(20) UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genres (
  film_id integer NOT NULL,
  genre_id integer NOT NULL,
  CONSTRAINT film_genres_film_id FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  CONSTRAINT film_genres_genre_id FOREIGN KEY (genre_id) REFERENCES genre(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_mpa (
  film_id integer NOT NULL,
  mpa_id integer NOT NULL,
  CONSTRAINT film_mpa_film_id FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  CONSTRAINT film_mpa_mpa_id FOREIGN KEY (mpa_id) REFERENCES mpa(id) ON DELETE CASCADE
);